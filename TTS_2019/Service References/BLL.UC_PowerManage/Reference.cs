//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TTS_2019.BLL.UC_PowerManage {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BLL.UC_PowerManage.UC_PowerManage")]
    public interface UC_PowerManage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectPermissionGroup", ReplyAction="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectPermissionGroupRespo" +
            "nse")]
        System.Data.DataSet limitsOfPower_Loaded_SelectPermissionGroup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectPermissionGroup", ReplyAction="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectPermissionGroupRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> limitsOfPower_Loaded_SelectPermissionGroupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectModular", ReplyAction="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectModularResponse")]
        System.Data.DataSet limitsOfPower_Loaded_SelectModular(string strPermissionGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectModular", ReplyAction="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectModularResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> limitsOfPower_Loaded_SelectModularAsync(string strPermissionGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectOperation", ReplyAction="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectOperationResponse")]
        System.Data.DataSet limitsOfPower_Loaded_SelectOperation(string strAsOperationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectOperation", ReplyAction="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectOperationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> limitsOfPower_Loaded_SelectOperationAsync(string strAsOperationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectAllModular", ReplyAction="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectAllModularResponse")]
        System.Data.DataSet limitsOfPower_Loaded_SelectAllModular();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectAllModular", ReplyAction="http://tempuri.org/UC_PowerManage/limitsOfPower_Loaded_SelectAllModularResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> limitsOfPower_Loaded_SelectAllModularAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_InsertPermissionGroup", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_InsertPermissionGroupResponse")]
        int Window_Loaded_InsertPermissionGroup(string strPname, string strPgroup, string strRemarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_InsertPermissionGroup", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_InsertPermissionGroupResponse")]
        System.Threading.Tasks.Task<int> Window_Loaded_InsertPermissionGroupAsync(string strPname, string strPgroup, string strRemarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_InsertModularOperation", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_InsertModularOperationResponse")]
        System.Data.DataSet Window_Loaded_InsertModularOperation(int intModularId, string strAsOperationId, string strPname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_InsertModularOperation", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_InsertModularOperationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Window_Loaded_InsertModularOperationAsync(int intModularId, string strAsOperationId, string strPname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_DeletePermissionGroup", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_DeletePermissionGroupResponse")]
        int Window_Loaded_DeletePermissionGroup(int intPGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_DeletePermissionGroup", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_DeletePermissionGroupResponse")]
        System.Threading.Tasks.Task<int> Window_Loaded_DeletePermissionGroupAsync(int intPGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_DeleteModularOperation", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_DeleteModularOperationResponse")]
        int Window_Loaded_DeleteModularOperation(int intModularDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_DeleteModularOperation", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_DeleteModularOperationResponse")]
        System.Threading.Tasks.Task<int> Window_Loaded_DeleteModularOperationAsync(int intModularDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_UpdatePermissionGroup", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_UpdatePermissionGroupResponse")]
        int Window_Loaded_UpdatePermissionGroup(string strPname, string strPgroup, string strRemarks, int intPGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_UpdatePermissionGroup", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_UpdatePermissionGroupResponse")]
        System.Threading.Tasks.Task<int> Window_Loaded_UpdatePermissionGroupAsync(string strPname, string strPgroup, string strRemarks, int intPGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_UInsertModularOperation", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_UInsertModularOperationResponse")]
        System.Data.DataSet Window_Loaded_UInsertModularOperation(int intModularId, string strAsOperationId, string strPname, int intPGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UC_PowerManage/Window_Loaded_UInsertModularOperation", ReplyAction="http://tempuri.org/UC_PowerManage/Window_Loaded_UInsertModularOperationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Window_Loaded_UInsertModularOperationAsync(int intModularId, string strAsOperationId, string strPname, int intPGroupId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UC_PowerManageChannel : TTS_2019.BLL.UC_PowerManage.UC_PowerManage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UC_PowerManageClient : System.ServiceModel.ClientBase<TTS_2019.BLL.UC_PowerManage.UC_PowerManage>, TTS_2019.BLL.UC_PowerManage.UC_PowerManage {
        
        public UC_PowerManageClient() {
        }
        
        public UC_PowerManageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UC_PowerManageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UC_PowerManageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UC_PowerManageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet limitsOfPower_Loaded_SelectPermissionGroup() {
            return base.Channel.limitsOfPower_Loaded_SelectPermissionGroup();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> limitsOfPower_Loaded_SelectPermissionGroupAsync() {
            return base.Channel.limitsOfPower_Loaded_SelectPermissionGroupAsync();
        }
        
        public System.Data.DataSet limitsOfPower_Loaded_SelectModular(string strPermissionGroup) {
            return base.Channel.limitsOfPower_Loaded_SelectModular(strPermissionGroup);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> limitsOfPower_Loaded_SelectModularAsync(string strPermissionGroup) {
            return base.Channel.limitsOfPower_Loaded_SelectModularAsync(strPermissionGroup);
        }
        
        public System.Data.DataSet limitsOfPower_Loaded_SelectOperation(string strAsOperationId) {
            return base.Channel.limitsOfPower_Loaded_SelectOperation(strAsOperationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> limitsOfPower_Loaded_SelectOperationAsync(string strAsOperationId) {
            return base.Channel.limitsOfPower_Loaded_SelectOperationAsync(strAsOperationId);
        }
        
        public System.Data.DataSet limitsOfPower_Loaded_SelectAllModular() {
            return base.Channel.limitsOfPower_Loaded_SelectAllModular();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> limitsOfPower_Loaded_SelectAllModularAsync() {
            return base.Channel.limitsOfPower_Loaded_SelectAllModularAsync();
        }
        
        public int Window_Loaded_InsertPermissionGroup(string strPname, string strPgroup, string strRemarks) {
            return base.Channel.Window_Loaded_InsertPermissionGroup(strPname, strPgroup, strRemarks);
        }
        
        public System.Threading.Tasks.Task<int> Window_Loaded_InsertPermissionGroupAsync(string strPname, string strPgroup, string strRemarks) {
            return base.Channel.Window_Loaded_InsertPermissionGroupAsync(strPname, strPgroup, strRemarks);
        }
        
        public System.Data.DataSet Window_Loaded_InsertModularOperation(int intModularId, string strAsOperationId, string strPname) {
            return base.Channel.Window_Loaded_InsertModularOperation(intModularId, strAsOperationId, strPname);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Window_Loaded_InsertModularOperationAsync(int intModularId, string strAsOperationId, string strPname) {
            return base.Channel.Window_Loaded_InsertModularOperationAsync(intModularId, strAsOperationId, strPname);
        }
        
        public int Window_Loaded_DeletePermissionGroup(int intPGroupId) {
            return base.Channel.Window_Loaded_DeletePermissionGroup(intPGroupId);
        }
        
        public System.Threading.Tasks.Task<int> Window_Loaded_DeletePermissionGroupAsync(int intPGroupId) {
            return base.Channel.Window_Loaded_DeletePermissionGroupAsync(intPGroupId);
        }
        
        public int Window_Loaded_DeleteModularOperation(int intModularDetailId) {
            return base.Channel.Window_Loaded_DeleteModularOperation(intModularDetailId);
        }
        
        public System.Threading.Tasks.Task<int> Window_Loaded_DeleteModularOperationAsync(int intModularDetailId) {
            return base.Channel.Window_Loaded_DeleteModularOperationAsync(intModularDetailId);
        }
        
        public int Window_Loaded_UpdatePermissionGroup(string strPname, string strPgroup, string strRemarks, int intPGroupId) {
            return base.Channel.Window_Loaded_UpdatePermissionGroup(strPname, strPgroup, strRemarks, intPGroupId);
        }
        
        public System.Threading.Tasks.Task<int> Window_Loaded_UpdatePermissionGroupAsync(string strPname, string strPgroup, string strRemarks, int intPGroupId) {
            return base.Channel.Window_Loaded_UpdatePermissionGroupAsync(strPname, strPgroup, strRemarks, intPGroupId);
        }
        
        public System.Data.DataSet Window_Loaded_UInsertModularOperation(int intModularId, string strAsOperationId, string strPname, int intPGroupId) {
            return base.Channel.Window_Loaded_UInsertModularOperation(intModularId, strAsOperationId, strPname, intPGroupId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Window_Loaded_UInsertModularOperationAsync(int intModularId, string strAsOperationId, string strPname, int intPGroupId) {
            return base.Channel.Window_Loaded_UInsertModularOperationAsync(intModularId, strAsOperationId, strPname, intPGroupId);
        }
    }
}
